[{"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\index.js":"1","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\app.jsx":"2","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\signup\\signup.jsx":"3","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\footer\\footer.jsx":"4","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\mainPage\\mainPage.jsx":"5","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\login\\login.jsx":"6","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\Fare&Tracking\\tracking\\tracking.jsx":"7","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\Fare&Tracking\\fare\\fareExpect.jsx":"8","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\process_intro\\exportProcess\\exportProcess.jsx":"9","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\process_intro\\tradeTerm\\tradeTerm.jsx":"10","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\org&pol\\policies\\policies.jsx":"11","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\mypage\\myArticleAndReply\\myArticleAndReply.jsx":"12","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\community\\notice\\notice.jsx":"13","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\community\\bbs\\bbs.jsx":"14","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\org&pol\\consulting\\consulting.jsx":"15","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\mypage\\fareExpectList\\fareExpectList.jsx":"16","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\org&pol\\organizations\\organizations.jsx":"17","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\mypage\\myPageEdit\\myPageEdit.jsx":"18","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\listTable\\listTable.jsx":"19","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\listTable\\listItem.jsx":"20","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\header\\header.jsx":"21","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\community\\articlePreview\\articlePreview.jsx":"22","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\community\\articleView\\articleView.jsx":"23","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\community\\writeArticle\\writeArticle.jsx":"24","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\community\\editArticle\\editArticle.jsx":"25","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\errorPage\\errorPage.jsx":"26","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\community\\reply\\reply.jsx":"27","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\org&pol\\consulting\\consultingItem\\consultingItem.jsx":"28","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\findId\\findId.jsx":"29","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\findPw\\findPw.jsx":"30","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\community\\reportPopup\\reportPopup.jsx":"31","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\mypage\\myArticleAndReply\\myPageArticlePreview\\myPageArticlePreview.jsx":"32","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\mypage\\myArticleAndReply\\myPageReplyPreview\\myPageReplyPreview.jsx":"33","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\loadingPage\\loadingPage.jsx":"34","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\process_intro\\tradeTerm\\tradeTermItem\\tradeTermItem.jsx":"35"},{"size":275,"mtime":1624913994267,"results":"36","hashOfConfig":"37"},{"size":9612,"mtime":1626298998636,"results":"38","hashOfConfig":"37"},{"size":7607,"mtime":1625763760671,"results":"39","hashOfConfig":"37"},{"size":691,"mtime":1624913994197,"results":"40","hashOfConfig":"37"},{"size":5425,"mtime":1626225216341,"results":"41","hashOfConfig":"37"},{"size":2433,"mtime":1625717833617,"results":"42","hashOfConfig":"37"},{"size":3129,"mtime":1626223334993,"results":"43","hashOfConfig":"37"},{"size":7577,"mtime":1625002049654,"results":"44","hashOfConfig":"37"},{"size":356,"mtime":1625748011591,"results":"45","hashOfConfig":"37"},{"size":7890,"mtime":1626305741941,"results":"46","hashOfConfig":"37"},{"size":424,"mtime":1625748037259,"results":"47","hashOfConfig":"37"},{"size":5785,"mtime":1626224519942,"results":"48","hashOfConfig":"37"},{"size":3560,"mtime":1625623779055,"results":"49","hashOfConfig":"37"},{"size":3660,"mtime":1625951440655,"results":"50","hashOfConfig":"37"},{"size":516,"mtime":1625660415645,"results":"51","hashOfConfig":"37"},{"size":272,"mtime":1624913994205,"results":"52","hashOfConfig":"37"},{"size":442,"mtime":1625748025494,"results":"53","hashOfConfig":"37"},{"size":7421,"mtime":1626127984711,"results":"54","hashOfConfig":"37"},{"size":755,"mtime":1626223581159,"results":"55","hashOfConfig":"37"},{"size":1326,"mtime":1626223657124,"results":"56","hashOfConfig":"37"},{"size":8828,"mtime":1626226021682,"results":"57","hashOfConfig":"37"},{"size":1245,"mtime":1625948461361,"results":"58","hashOfConfig":"37"},{"size":8324,"mtime":1626224322901,"results":"59","hashOfConfig":"37"},{"size":2868,"mtime":1625660354694,"results":"60","hashOfConfig":"37"},{"size":3739,"mtime":1626229629803,"results":"61","hashOfConfig":"37"},{"size":884,"mtime":1626127535297,"results":"62","hashOfConfig":"37"},{"size":1754,"mtime":1625745670121,"results":"63","hashOfConfig":"37"},{"size":829,"mtime":1625674893389,"results":"64","hashOfConfig":"37"},{"size":1580,"mtime":1625717116102,"results":"65","hashOfConfig":"37"},{"size":5838,"mtime":1625745783874,"results":"66","hashOfConfig":"37"},{"size":2144,"mtime":1626124856229,"results":"67","hashOfConfig":"37"},{"size":1853,"mtime":1626215167629,"results":"68","hashOfConfig":"37"},{"size":1832,"mtime":1626218436094,"results":"69","hashOfConfig":"37"},{"size":336,"mtime":1626224265763,"results":"70","hashOfConfig":"37"},{"size":463,"mtime":1626300483218,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"uk7f7q",{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"74"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\index.js",[],["153","154"],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\app.jsx",["155","156"],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\signup\\signup.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\footer\\footer.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\mainPage\\mainPage.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\login\\login.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\Fare&Tracking\\tracking\\tracking.jsx",["157","158","159","160","161","162","163","164","165"],"import React, { useState } from \"react\";\r\nimport styles from \"./tracking.module.css\";\r\n\r\nconst Tracking = (props) => {\r\n  const [readyOn, setReadyOn] = useState(true);\r\n  const [startOn, setStartOn] = useState(true);\r\n  const [movingOn, setMovingOn] = useState(false);\r\n  const [arrivalOn, setArrivalOn] = useState(false);\r\n  const [departCity, setDepartCity] = useState(\"인천\");\r\n  const [departDate, setDepartDate] = useState(\"2021-05-15 08:22\");\r\n  const [currentLocation, setCurrentLocation] = useState(\"부산\");\r\n  const [currentDate, setCurrentDate] = useState(\"2021-05-16 09:22\");\r\n  const [arriveCity, setArriveCity] = useState(\"상하이\");\r\n\r\n  return (\r\n    <section className={styles.tracking}>\r\n      <p className={styles.title}>화물 트래킹</p>\r\n      <section className={styles.search_container}>\r\n        <input\r\n          type=\"text\"\r\n          className={styles.search_input}\r\n          placeholder=\"선박명/MMSI/IMO/Call Sign 중 한 가지 입력\"\r\n          spellCheck=\"false\"\r\n        />\r\n        <i className={`${styles.search_icon} fas fa-search`}></i>\r\n      </section>\r\n      <section className={styles.view_result_container}>\r\n        <div className={styles.view_result}>\r\n          <div\r\n            className={\r\n              readyOn\r\n                ? `${styles.circle} ${styles.on}`\r\n                : `${styles.circle} ${styles.off}`\r\n            }\r\n          ></div>\r\n          <p className={styles.name}>출고 준비</p>\r\n        </div>\r\n        <div className={styles.view_result}>\r\n          <div\r\n            className={\r\n              startOn\r\n                ? `${styles.circle} ${styles.on}`\r\n                : `${styles.circle} ${styles.off}`\r\n            }\r\n          ></div>\r\n          <p className={styles.name}>출고 시작</p>\r\n          <p\r\n            className={`${styles.depart_city} ${styles.sub_data}`}\r\n          >{`출발지: ${departCity}`}</p>\r\n          <p className={`${styles.depart_date} ${styles.sub_data}`}>\r\n            {departDate}\r\n          </p>\r\n        </div>\r\n        <div className={styles.view_result}>\r\n          <div\r\n            className={\r\n              movingOn\r\n                ? `${styles.circle} ${styles.on}`\r\n                : `${styles.circle} ${styles.off}`\r\n            }\r\n          ></div>\r\n          <p className={styles.name}>운송중</p>\r\n          <p\r\n            className={`${styles.current_location} ${styles.sub_data}`}\r\n          >{`현재위치: ${currentLocation}`}</p>\r\n          <p className={`${styles.current_date} ${styles.sub_data}`}>\r\n            {currentDate}\r\n          </p>\r\n        </div>\r\n        <div className={styles.view_result}>\r\n          <div\r\n            className={\r\n              arrivalOn\r\n                ? `${styles.circle} ${styles.on}`\r\n                : `${styles.circle} ${styles.off}`\r\n            }\r\n          ></div>\r\n          <p className={styles.name}>도착</p>\r\n          <p\r\n            className={`${styles.arrive_city} ${styles.sub_data}`}\r\n          >{`도착예정지: ${arriveCity}`}</p>\r\n        </div>\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Tracking;\r\n","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\Fare&Tracking\\fare\\fareExpect.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\process_intro\\exportProcess\\exportProcess.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\process_intro\\tradeTerm\\tradeTerm.jsx",["166","167"],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\org&pol\\policies\\policies.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\mypage\\myArticleAndReply\\myArticleAndReply.jsx",["168","169","170"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styles from \"./myArticleAndReply.module.css\";\r\nimport MyPageArticlePreview from \"./myPageArticlePreview/myPageArticlePreview\";\r\nimport MyPageReplyPreview from \"./myPageReplyPreview/myPageReplyPreview\";\r\n\r\nconst MyArticleAndReply = ({\r\n  articles,\r\n  replies,\r\n  user,\r\n  allArticles,\r\n  loadArticlesAndReplies,\r\n}) => {\r\n  const history = useHistory();\r\n  const [numbering, setNumbering] = useState(1);\r\n  const [replyNumbering, setReplyNumbering] = useState(1);\r\n  const [selector, setSelector] = useState(true);\r\n  const articleKeyList = Object.keys(articles).reverse();\r\n  const replyKeyList = Object.keys(replies);\r\n\r\n  // 글 페이지 생성 (개선 예정)\r\n  let pageLength = 0;\r\n\r\n  if (articleKeyList.length % 10 === 0) {\r\n    pageLength = parseInt(articleKeyList.length / 10);\r\n  } else if (articleKeyList.length <= 10) {\r\n    pageLength = 1;\r\n  } else {\r\n    pageLength = parseInt(articleKeyList.length / 10) + 1;\r\n  }\r\n\r\n  const list = [];\r\n\r\n  for (let i = 1; i <= pageLength; i++) {\r\n    list.push(i);\r\n  }\r\n\r\n  let pages = [];\r\n  for (let i = 0; i <= pageLength; i++) {\r\n    pages[i] = new Array();\r\n  }\r\n\r\n  for (let i = 1; i <= pageLength; i++) {\r\n    for (let j = 10 * (i - 1); j < 10 * i; j++) {\r\n      if (articleKeyList[j] === undefined) {\r\n        break;\r\n      }\r\n      pages[i].push(articleKeyList[j]);\r\n    }\r\n  }\r\n\r\n  // 댓글 페이지 생성 (개선 예정)\r\n  let replyPageLength = 0;\r\n\r\n  if (replyKeyList.length % 10 === 0) {\r\n    replyPageLength = parseInt(replyKeyList.length / 10);\r\n  } else if (replyKeyList.length <= 10) {\r\n    replyPageLength = 1;\r\n  } else {\r\n    replyPageLength = parseInt(replyKeyList.length / 10) + 1;\r\n  }\r\n\r\n  const replyList = [];\r\n\r\n  for (let i = 1; i <= replyPageLength; i++) {\r\n    replyList.push(i);\r\n  }\r\n\r\n  let replyPages = [];\r\n  for (let i = 0; i <= replyPageLength; i++) {\r\n    replyPages[i] = new Array();\r\n  }\r\n\r\n  for (let i = 1; i <= replyPageLength; i++) {\r\n    for (let j = 10 * (i - 1); j < 10 * i; j++) {\r\n      if (replyKeyList[j] === undefined) {\r\n        break;\r\n      }\r\n      replyPages[i].push(replyKeyList[j]);\r\n    }\r\n  }\r\n\r\n  const pageNumberClick = (e) => {\r\n    setNumbering(e.target.textContent);\r\n  };\r\n\r\n  const replyPageNumberClick = (e) => {\r\n    setReplyNumbering(e.target.textContent);\r\n  };\r\n\r\n  const changeToArticle = () => {\r\n    console.log(\"asdsa\");\r\n    setSelector(true);\r\n  };\r\n\r\n  const changeToReply = () => {\r\n    console.log(\"asdsa\");\r\n    setSelector(false);\r\n  };\r\n\r\n  return (\r\n    <section className={styles.bbs}>\r\n      <section className={styles.top}>\r\n        <div className={styles.title_container}>\r\n          <h1 className={styles.bbs_title}>마이페이지</h1>\r\n          <p className={styles.bbs_subtitle}>내가 쓴 글/댓글</p>\r\n        </div>\r\n        <div className={styles.button_container}>\r\n          <button\r\n            className={\r\n              selector\r\n                ? `${styles.article_button} ${styles.on}`\r\n                : `${styles.article_button} ${styles.off}`\r\n            }\r\n            onClick={changeToArticle}\r\n          >\r\n            글\r\n          </button>\r\n          <button\r\n            className={\r\n              selector\r\n                ? `${styles.reply_button} ${styles.off}`\r\n                : `${styles.reply_button} ${styles.on}`\r\n            }\r\n            onClick={changeToReply}\r\n          >\r\n            댓글\r\n          </button>\r\n        </div>\r\n      </section>\r\n      {selector ? (\r\n        <section className={styles.header}>\r\n          <div className={styles.number}>번호</div>\r\n          <div className={styles.date}>작성일자</div>\r\n          <div className={styles.title}>제목</div>\r\n          <div className={styles.reply}>댓글</div>\r\n          <div className={styles.recommand}>추천</div>\r\n          <div className={styles.edit_and_delete}></div>\r\n        </section>\r\n      ) : (\r\n        <section className={styles.header}>\r\n          <div className={styles.content_reply}>내 댓글</div>\r\n          <div className={styles.title_reply}>글 제목</div>\r\n          <div className={styles.date_reply}>작성일</div>\r\n          <div className={styles.delete_reply}></div>\r\n        </section>\r\n      )}\r\n      <section className={styles.body}>\r\n        {selector\r\n          ? articles.length !== 0 &&\r\n            pages[numbering].map((index) => (\r\n              <MyPageArticlePreview\r\n                key={articles[index].id}\r\n                article={articles[index]}\r\n                loadArticlesAndReplies={loadArticlesAndReplies}\r\n              />\r\n            ))\r\n          : replies.length !== 0 &&\r\n            replyPages[replyNumbering].map((index) => (\r\n              <MyPageReplyPreview\r\n                key={replies[index].timeId}\r\n                reply={replies[index]}\r\n                allArticles={allArticles}\r\n                loadArticlesAndReplies={loadArticlesAndReplies}\r\n              />\r\n            ))}\r\n      </section>\r\n      <section className={styles.bottom}>\r\n        <ul className={styles.page_numbers}>\r\n          {selector\r\n            ? list.map((num) => (\r\n                <li\r\n                  key={num}\r\n                  className={styles.page_number}\r\n                  onClick={pageNumberClick}\r\n                >\r\n                  {num}\r\n                </li>\r\n              ))\r\n            : replyList.map((num) => (\r\n                <li\r\n                  key={num}\r\n                  className={styles.page_number}\r\n                  onClick={replyPageNumberClick}\r\n                >\r\n                  {num}\r\n                </li>\r\n              ))}\r\n        </ul>\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MyArticleAndReply;\r\n","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\community\\notice\\notice.jsx",["171"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ArticlePreview from \"../articlePreview/articlePreview\";\r\nimport styles from \"./notice.module.css\";\r\n\r\nconst Notice = ({ articles, user }) => {\r\n  const history = useHistory();\r\n  const articleKeyList = Object.keys(articles).reverse();\r\n  const [numbering, setNumbering] = useState(1);\r\n  const adminId = \"dlwhd990\"; // env가 안돼서 일단 이렇게 작성 (이유는 모름)\r\n\r\n  const goWrite = () => {\r\n    if (!user) {\r\n      window.alert(\"로그인 하신 후에 글 작성이 가능합니다.\");\r\n      return;\r\n    } else if (user.userId !== adminId) {\r\n      window.alert(\"공지사항은 관리자만 글을 작성할 수 있습니다.\");\r\n      return;\r\n    }\r\n    history.push(\"/notice/write\");\r\n    window.scrollTo({ top: 0 });\r\n  };\r\n\r\n  let pagelength = 0;\r\n\r\n  if (articleKeyList.length % 10 === 0) {\r\n    pagelength = parseInt(articleKeyList.length / 10);\r\n  } else if (articleKeyList.length <= 10) {\r\n    pagelength = 1;\r\n  } else {\r\n    pagelength = parseInt(articleKeyList.length / 10) + 1;\r\n  }\r\n\r\n  const list = [];\r\n\r\n  for (let i = 1; i <= pagelength; i++) {\r\n    list.push(i);\r\n  }\r\n\r\n  let pages = [];\r\n  for (let i = 0; i <= pagelength; i++) {\r\n    pages[i] = new Array();\r\n  }\r\n\r\n  for (let i = 1; i <= pagelength; i++) {\r\n    for (let j = 10 * (i - 1); j < 10 * i; j++) {\r\n      if (articleKeyList[j] === undefined) {\r\n        break;\r\n      }\r\n      pages[i].push(articleKeyList[j]);\r\n    }\r\n  }\r\n\r\n  const pageNumberClick = (e) => {\r\n    setNumbering(e.target.textContent);\r\n  };\r\n\r\n  return (\r\n    <section className={styles.notice}>\r\n      <h1 className={styles.notice_title}>공지사항</h1>\r\n      <section className={styles.top}>\r\n        <section className={styles.search}>\r\n          <select\r\n            name=\"search_type\"\r\n            id=\"search_type\"\r\n            className={styles.search_type_select}\r\n          >\r\n            <option value=\"title\">글 제목</option>\r\n            <option value=\"writer\">작성자</option>\r\n          </select>\r\n          <input type=\"text\" className={styles.search_text_input} />\r\n          <i className={`${styles.search_icon} fas fa-search`}></i>\r\n        </section>\r\n        <section className={styles.button_container}>\r\n          <button className={styles.write_button} onClick={goWrite}>\r\n            글쓰기\r\n          </button>\r\n        </section>\r\n      </section>\r\n      <section className={styles.header}>\r\n        <div className={styles.number}>번호</div>\r\n        <div className={styles.date}>작성일자</div>\r\n        <div className={styles.title}>제목</div>\r\n        <div className={styles.writer}>작성자</div>\r\n        <div className={styles.reply}>댓글</div>\r\n        <div className={styles.recommand}>추천</div>\r\n        <div className={styles.report}>신고</div>\r\n      </section>\r\n      <section className={styles.body}>\r\n        {pages[numbering].map((index) => (\r\n          <ArticlePreview\r\n            key={articles[index].id}\r\n            article={articles[index]}\r\n            where=\"notice\"\r\n          />\r\n        ))}\r\n      </section>\r\n      <section className={styles.bottom}>\r\n        <ul className={styles.page_numbers}>\r\n          {list.map((num) => (\r\n            <li\r\n              key={num}\r\n              className={styles.page_number}\r\n              onClick={pageNumberClick}\r\n            >\r\n              {num}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Notice;\r\n","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\community\\bbs\\bbs.jsx",["172"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ArticlePreview from \"../articlePreview/articlePreview\";\r\nimport ReportPopup from \"../reportPopup/reportPopup\";\r\nimport styles from \"./bbs.module.css\";\r\n\r\nconst Bbs = ({ articles, user }) => {\r\n  const history = useHistory();\r\n  const [numbering, setNumbering] = useState(1);\r\n  const [reportOn, setReportOn] = useState(false);\r\n  const articleKeyList = Object.keys(articles).reverse();\r\n\r\n  let pagelength = 0;\r\n\r\n  if (articleKeyList.length % 10 === 0) {\r\n    pagelength = parseInt(articleKeyList.length / 10);\r\n  } else if (articleKeyList.length <= 10) {\r\n    pagelength = 1;\r\n  } else {\r\n    pagelength = parseInt(articleKeyList.length / 10) + 1;\r\n  }\r\n\r\n  const list = [];\r\n\r\n  for (let i = 1; i <= pagelength; i++) {\r\n    list.push(i);\r\n  }\r\n\r\n  let pages = [];\r\n  for (let i = 0; i <= pagelength; i++) {\r\n    pages[i] = new Array();\r\n  }\r\n\r\n  for (let i = 1; i <= pagelength; i++) {\r\n    for (let j = 10 * (i - 1); j < 10 * i; j++) {\r\n      if (articleKeyList[j] === undefined) {\r\n        break;\r\n      }\r\n      pages[i].push(articleKeyList[j]);\r\n    }\r\n  }\r\n\r\n  const pageNumberClick = (e) => {\r\n    setNumbering(e.target.textContent);\r\n  };\r\n\r\n  const goWrite = () => {\r\n    if (!user) {\r\n      window.alert(\"로그인 하신 후에 글 작성이 가능합니다.\");\r\n      return;\r\n    }\r\n    history.push(\"/bbs/write\");\r\n    window.scrollTo({ top: 0 });\r\n  };\r\n\r\n  const reportOnChange = () => {\r\n    setReportOn(!reportOn);\r\n  };\r\n\r\n  return (\r\n    <section className={styles.bbs}>\r\n      <h1 className={styles.bbs_title}>자유게시판</h1>\r\n      <section className={styles.top}>\r\n        <section className={styles.search}>\r\n          <select\r\n            name=\"search_type\"\r\n            id=\"search_type\"\r\n            className={styles.search_type_select}\r\n          >\r\n            <option value=\"title\">글 제목</option>\r\n            <option value=\"writer\">작성자</option>\r\n          </select>\r\n          <input type=\"text\" className={styles.search_text_input} />\r\n          <i className={`${styles.search_icon} fas fa-search`}></i>\r\n        </section>\r\n        <section className={styles.button_container}>\r\n          <button className={styles.write_button} onClick={goWrite}>\r\n            글쓰기\r\n          </button>\r\n        </section>\r\n      </section>\r\n      <section className={styles.header}>\r\n        <div className={styles.number}>번호</div>\r\n        <div className={styles.date}>작성일자</div>\r\n        <div className={styles.title}>제목</div>\r\n        <div className={styles.writer}>작성자</div>\r\n        <div className={styles.reply}>댓글</div>\r\n        <div className={styles.recommand}>추천</div>\r\n        <div className={styles.report}>신고</div>\r\n      </section>\r\n      <section className={styles.body}>\r\n        {pages[numbering].map((index) => (\r\n          <ArticlePreview\r\n            key={articles[index].id}\r\n            article={articles[index]}\r\n            where=\"bbs\"\r\n            reportOnChange={reportOnChange}\r\n          />\r\n        ))}\r\n      </section>\r\n      <section className={styles.bottom}>\r\n        <ul className={styles.page_numbers}>\r\n          {list.map((num) => (\r\n            <li\r\n              key={num}\r\n              className={styles.page_number}\r\n              onClick={pageNumberClick}\r\n            >\r\n              {num}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </section>\r\n      {reportOn && <div className={styles.report_filter}></div>}\r\n      {reportOn && <ReportPopup reportOnChange={reportOnChange} />}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Bbs;\r\n","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\org&pol\\consulting\\consulting.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\mypage\\fareExpectList\\fareExpectList.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\org&pol\\organizations\\organizations.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\mypage\\myPageEdit\\myPageEdit.jsx",["173","174","175","176","177"],"import React, { useRef, useState } from \"react\";\r\nimport styles from \"./myPageEdit.module.css\";\r\nimport axios from \"axios\";\r\n\r\n// 구체적인 내용은 상의 후 결정\r\n// 1. 한 번에 아이디, 비밀번호, 닉네임, 핸드폰 번호 모두를 수정하려는 회원은 없을 것이고\r\n//    이 중 한 두개만 수정을 원할텐데 이 때 어떻게 할 것인지?\r\n// 2. 빈칸으로 둔 부분은 무시하고 작성된 부분만 수정?\r\n//    or 처음부터 무엇을 수정할 지 결정한 후에 해당 내용만 수정하는 페이지로 따로 이동?\r\n// 3. 아이디도 수정을 가능하게 해도 괜찮을까? (기능 상 문제보다는 굳이 해야할까 이런느낌)\r\n\r\nconst MyPageEdit = (props) => {\r\n  const [checkedId, setCheckedId] = useState(null);\r\n  const [checkedNickname, setCheckedNickname] = useState(null);\r\n  const [tempPhoneNum, setTempPhoneNum] = useState(null);\r\n  const [checkedPhoneNum, setCheckedPhoneNum] = useState(null);\r\n\r\n  const idRef = useRef();\r\n  const pwRef = useRef();\r\n  const pwConfirmRef = useRef();\r\n  const nicknameRef = useRef();\r\n  const phoneNumRef = useRef();\r\n  const authNumRef = useRef();\r\n\r\n  const idCheckHandler = () => {\r\n    if (idRef.current.value.length < 6 || idRef.current.value.length > 15) {\r\n      window.alert(\"글자 수가 맞지 않습니다. (6자 ~ 15자)\");\r\n      return;\r\n    }\r\n    axios\r\n      .post(\"/auth/dup-id\", { checkId: idRef.current.value })\r\n      .then((response) => {\r\n        window.alert(response.data);\r\n        if (response.data === \"사용 가능한 아이디입니다.\") {\r\n          setCheckedId(idRef.current.value);\r\n        }\r\n      })\r\n      .catch((err) => console.error(\"error: \", err.response));\r\n  };\r\n\r\n  const nicknameCheckHandler = () => {\r\n    if (\r\n      nicknameRef.current.value.length < 2 ||\r\n      nicknameRef.current.value.length > 6\r\n    ) {\r\n      window.alert(\"글자 수가 맞지 않습니다. (2자 ~ 6자)\");\r\n      return;\r\n    }\r\n    axios\r\n      .post(\"/auth/dup-nickname\", { checkNickname: nicknameRef.current.value })\r\n      .then((response) => {\r\n        window.alert(response.data);\r\n        if (response.data === \"사용 가능한 닉네임입니다.\") {\r\n          setCheckedNickname(nicknameRef.current.value);\r\n        }\r\n      })\r\n      .catch((err) => console.error(\"error: \", err.response));\r\n  };\r\n\r\n  const sendSMSHandler = (e) => {\r\n    const phoneNum = phoneNumRef.current.value;\r\n    if (phoneNum.length !== 10 && phoneNum.length !== 11) {\r\n      window.alert(\"핸드폰 번호를 다시 확인해주세요.\");\r\n      return;\r\n    }\r\n    if (!(phoneNum[0] === \"0\" && phoneNum[1] === \"1\")) {\r\n      window.alert(\"핸드폰 번호를 다시 확인해주세요. \");\r\n      return;\r\n    }\r\n    axios\r\n      .post(\"/auth/sms-auth\", { phoneNum })\r\n      .then((response) => {\r\n        window.alert(response.data.message);\r\n        setTempPhoneNum(phoneNum);\r\n      })\r\n      .catch((err) => console.error(\"error: \", err.response));\r\n  };\r\n\r\n  const checkAuthNumHandler = () => {\r\n    axios\r\n      .post(\"/auth/sms-auth-check\", { authNum: authNumRef.current.value })\r\n      .then((res) => {\r\n        window.alert(res.data.message);\r\n        if (res.data.success) {\r\n          setCheckedPhoneNum(tempPhoneNum);\r\n        }\r\n      })\r\n      .catch((err) => console.error(\"error: \", err.response));\r\n  };\r\n\r\n  const signupSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    const id = checkedId;\r\n    const pw = pwRef.current.value;\r\n    const pwConfirm = pwConfirmRef.current.value;\r\n    const nickname = checkedNickname;\r\n    const phoneNum = checkedPhoneNum;\r\n\r\n    if (!id) {\r\n      window.alert(\"아이디 중복을 확인해주세요.\");\r\n      return;\r\n    } else if (pw.length < 6 || pw.length > 15) {\r\n      window.alert(\"비밀번호 길이가 올바르지 않습니다. (6자 ~ 15자)\");\r\n      return;\r\n    } else if (pw !== pwConfirm) {\r\n      window.alert(\"비밀번호가 확인과 다릅니다.\");\r\n      return;\r\n    } else if (!nickname) {\r\n      window.alert(\"닉네임 중복을 확인해주세요\");\r\n      return;\r\n    } else if (!phoneNum) {\r\n      window.alert(\"휴대폰 인증을 완료하셔야 합니다.\");\r\n      return;\r\n    }\r\n\r\n    const newUser = {\r\n      userId: checkedId,\r\n      password: pwRef.current.value,\r\n      nickname: checkedNickname,\r\n      phoneNum: checkedPhoneNum,\r\n    };\r\n\r\n    axios\r\n      .post(\"/auth/signup\", newUser)\r\n      .then((res) => {\r\n        if (res.data.success) {\r\n          window.alert(\"회원가입 성공\");\r\n          window.location.href = \"/\";\r\n        }\r\n      })\r\n      .catch((err) => console.error(\"error: \", err.response));\r\n  };\r\n\r\n  return (\r\n    <section className={styles.my_page_edit}>\r\n      <section className={styles.my_page_edit_container}>\r\n        <h1 className={styles.my_page_edit_title}>회원정보 수정</h1>\r\n        <form>\r\n          <div className={styles.id_input_container}>\r\n            <input\r\n              ref={idRef}\r\n              type=\"text\"\r\n              name=\"userId\"\r\n              className={styles.id_input}\r\n              placeholder=\"아이디 (6자 ~ 15자)\"\r\n              spellCheck=\"false\"\r\n            />\r\n            <button type=\"button\" className={styles.id_check_button}>\r\n              중복확인\r\n            </button>\r\n          </div>\r\n          <input\r\n            ref={pwRef}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"비밀번호 (6자 ~ 15자)\"\r\n            className={styles.pw_input}\r\n            spellCheck=\"false\"\r\n          />\r\n          <input\r\n            ref={pwConfirmRef}\r\n            type=\"password\"\r\n            name=\"password_confirm\"\r\n            placeholder=\"비밀번호확인\"\r\n            className={styles.pw_input}\r\n            spellCheck=\"false\"\r\n          />\r\n          <div className={styles.nickname_input_container}>\r\n            <input\r\n              ref={nicknameRef}\r\n              type=\"text\"\r\n              name=\"nickname\"\r\n              className={styles.nickname_input}\r\n              placeholder=\"닉네임 (2자 ~ 6자)\"\r\n              spellCheck=\"false\"\r\n            />\r\n            <button type=\"button\" className={styles.nickname_check_button}>\r\n              중복확인\r\n            </button>\r\n          </div>\r\n          <div className={styles.phone_input_container}>\r\n            <input\r\n              ref={phoneNumRef}\r\n              type=\"text\"\r\n              name=\"phoneNum\"\r\n              className={styles.phone_input}\r\n              placeholder=\"핸드폰 번호\"\r\n              spellCheck=\"false\"\r\n            />\r\n            <button type=\"button\" className={styles.phone_check_button}>\r\n              인증번호 전송\r\n            </button>\r\n          </div>\r\n          <div className={styles.auth_num_input_container}>\r\n            <input\r\n              ref={authNumRef}\r\n              type=\"text\"\r\n              name=\"authNum\"\r\n              className={styles.auth_num_input}\r\n              placeholder=\"인증번호\"\r\n              spellCheck=\"false\"\r\n            />\r\n            <button type=\"button\" className={styles.auth_num_check_button}>\r\n              인증하기\r\n            </button>\r\n          </div>\r\n          <button type=\"submit\" className={styles.my_page_edit_submit_button}>\r\n            수정완료\r\n          </button>\r\n        </form>\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MyPageEdit;\r\n","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\listTable\\listTable.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\listTable\\listItem.jsx",["178"],"import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./listItem.module.css\";\r\n\r\nconst ListItem = ({ item, id, length }) => {\r\n  const [viewContent, setViewContent] = useState(false);\r\n  const [isFirst, setIsFirst] = useState(false);\r\n  const [isLast, setIsLast] = useState(false);\r\n  const controlView = () => {\r\n    setViewContent(!viewContent);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id === \"0\") {\r\n      setIsFirst(true);\r\n    } else if (id === length - 1) {\r\n      setIsLast(true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <section\r\n      className={\r\n        isFirst\r\n          ? `${styles.list_item_first}`\r\n          : isLast\r\n          ? `${styles.list_item_last}`\r\n          : `${styles.list_item}`\r\n      }\r\n      onClick={controlView}\r\n    >\r\n      <div className={styles.item}>\r\n        <h1 className={styles.title}>{item.title}</h1>\r\n        <div className={styles.icon_container}>\r\n          {viewContent ? (\r\n            <img src=\"/images/up.png\" alt=\"close\" />\r\n          ) : (\r\n            <img src=\"/images/down.png\" alt=\"open\" />\r\n          )}\r\n        </div>\r\n      </div>\r\n      {viewContent && (\r\n        <div className={styles.content_container}>\r\n          <p className={styles.content}>{item.content}</p>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\header\\header.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\community\\articlePreview\\articlePreview.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\community\\articleView\\articleView.jsx",["179","180","181"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport styles from \"./articleView.module.css\";\r\nimport axios from \"axios\";\r\nimport Reply from \"../reply/reply\";\r\nimport ErrorPage from \"../../errorPage/errorPage\";\r\nimport LoadingPage from \"../../loadingPage/loadingPage\";\r\n\r\nconst ArticleView = ({\r\n  articles,\r\n  noticeArticles,\r\n  replies,\r\n  noticeReplies,\r\n  loadArticlesAndReplies,\r\n  user,\r\n}) => {\r\n  const { where, id } = useParams();\r\n  const replyRef = useRef();\r\n  const history = useHistory();\r\n  const [isWriter, setIsWriter] = useState(false);\r\n  const [recommandCount, setRecommandCount] = useState(null);\r\n  const [article, setArticle] = useState(null);\r\n  const [replyList, setReplyList] = useState(null);\r\n  let timeId, month, day, hour, minute;\r\n  let i;\r\n  let boardName;\r\n\r\n  if (where === \"bbs\") {\r\n    boardName = \"자유게시판\";\r\n  } else if (where === \"notice\") {\r\n    boardName = \"공지사항\";\r\n  }\r\n\r\n  // 더 나은 방법이 있을 지 생각해보기 (그냥 id와 인덱스를 매치하면 삭제 때문에 불가능함)\r\n  // 글마다 오브젝트명을 id값으로 하면 되는데 mongodb에서 이를 어떻게 하는지 모름\r\n\r\n  const articleSetting = () => {\r\n    if (where === \"bbs\") {\r\n      for (i = 0; i < articles.length; i++) {\r\n        if (articles[i].id.toString() === id) {\r\n          setArticle(articles[i]);\r\n        }\r\n      }\r\n    } else if (where === \"notice\") {\r\n      for (let i = 0; i < noticeArticles.length; i++) {\r\n        if (noticeArticles[i].id.toString() === id) {\r\n          setArticle(noticeArticles[i]);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const replySetting = () => {\r\n    if (where === \"bbs\") {\r\n      for (i = 0; i < replies.length; i++) {\r\n        if (replies[i].id === article.id) {\r\n          setReplyList(replies[i].replyList);\r\n          break;\r\n        }\r\n      }\r\n    } else if (where === \"notice\") {\r\n      for (i = 0; i < noticeReplies.length; i++) {\r\n        if (noticeReplies[i].id === article.id) {\r\n          setReplyList(noticeReplies[i].replyList);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    articleSetting();\r\n  }, [articles, noticeArticles]);\r\n\r\n  useEffect(() => {\r\n    article && replySetting();\r\n    article && setRecommandCount(article.recommand);\r\n  }, [article, replies, noticeReplies]);\r\n\r\n  useEffect(() => {\r\n    if (user && article && article.writerId === user.userId) {\r\n      setIsWriter(true);\r\n    }\r\n  }, [user, article]);\r\n\r\n  const makeDate = () => {\r\n    let date = new Date();\r\n    timeId = date.getTime().toString();\r\n    month = (date.getMonth() + 1).toString().padStart(2, \"0\");\r\n    day = date.getDate().toString().padStart(2, \"0\");\r\n    hour = date.getHours().toString().padStart(2, \"0\");\r\n    minute = date.getMinutes().toString().padStart(2, \"0\");\r\n  };\r\n\r\n  const onRecommandHandler = () => {\r\n    if (!user) {\r\n      window.alert(\" 로그인 후에 추천이 가능합니다.\");\r\n      return;\r\n    }\r\n    if (article.recommandList.includes(user.userId)) {\r\n      window.alert(\"이미 추천하셨습니다.\");\r\n    } else {\r\n      axios\r\n        .post(`/api/${where}/recommand`, {\r\n          id: article.id,\r\n          userId: user.userId,\r\n          recommand_count: article.recommand,\r\n          recommand_list: article.recommandList,\r\n        })\r\n        .then((res) => {\r\n          loadArticlesAndReplies();\r\n          window.alert(res.data.message);\r\n        })\r\n        .catch((err) => console.error(\"error: \", err.response));\r\n    }\r\n  };\r\n\r\n  const onDeleteHandler = () => {\r\n    const confirmPopup = window.confirm(\"정말로 글을 삭제하시겠습니까?\");\r\n    if (confirmPopup) {\r\n      axios\r\n        .post(`/api/${where}/delete`, {\r\n          id: article.id,\r\n        })\r\n        .then((res) => {\r\n          if (res.data.success) {\r\n            window.alert(res.data.message);\r\n            loadArticlesAndReplies();\r\n            history.push(`/${where}`);\r\n          }\r\n        })\r\n        .catch((err) => console.error(\"error: \", err.response));\r\n    }\r\n  };\r\n\r\n  const onEditHandler = () => {\r\n    window.scrollTo({ top: 0 });\r\n    history.push(`/${where}/edit/${article.id}`);\r\n  };\r\n\r\n  const onReplySubmitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const nowContent = replyRef.current.value;\r\n\r\n    if (!user) {\r\n      window.alert(\"로그인 후에 댓글 작성이 가능합니다.\");\r\n      return;\r\n    }\r\n    if (nowContent === \"\") {\r\n      window.alert(\"내용이 없는 댓글은 작성할 수 없습니다.\");\r\n      return;\r\n    }\r\n\r\n    makeDate();\r\n\r\n    const newReply = {\r\n      id: id,\r\n      timeId: timeId,\r\n      content: nowContent,\r\n      date: `${month}/${day} ${hour}:${minute}`,\r\n      writer: user.nickname,\r\n      writerId: user.userId,\r\n    };\r\n\r\n    axios\r\n      .post(`/api/${where}/writeReply`, newReply)\r\n      .then((res) => {\r\n        if (res.data.success) {\r\n          replyRef.current.value = \"\";\r\n          loadArticlesAndReplies();\r\n        }\r\n      })\r\n      .catch((err) => console.error(\"error: \", err.response));\r\n  };\r\n\r\n  if (article && replyList) {\r\n    return (\r\n      <section className={styles.article_view}>\r\n        <section className={styles.article_container}>\r\n          <article className={styles.article}>\r\n            <div className={styles.title_container}>\r\n              <p className={styles.where}>{boardName}</p>\r\n              <p className={styles.title}>{article.title}</p>\r\n            </div>\r\n            <div className={styles.user_data_and_button_container}>\r\n              <div className={styles.user_data_container}>\r\n                <p className={styles.writer}>{article.writer}</p>\r\n                <p className={styles.date}>{article.date}</p>\r\n              </div>\r\n              <div className={styles.button_container}>\r\n                {isWriter && (\r\n                  <button className={styles.edit} onClick={onEditHandler}>\r\n                    수정\r\n                  </button>\r\n                )}\r\n                {isWriter && (\r\n                  <button className={styles.delete} onClick={onDeleteHandler}>\r\n                    삭제\r\n                  </button>\r\n                )}\r\n                <button\r\n                  className={styles.recommand_button}\r\n                  onClick={onRecommandHandler}\r\n                >\r\n                  {`추천 ${recommandCount}`}\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className={styles.content_container}>\r\n              <p className={styles.content}>{article.content}</p>\r\n            </div>\r\n          </article>\r\n          <div className={styles.reply_input_container}>\r\n            <p\r\n              className={styles.reply_input_title}\r\n            >{`댓글 ${replyList.length}`}</p>\r\n            <form\r\n              className={styles.reply_input_form}\r\n              onSubmit={onReplySubmitHandler}\r\n            >\r\n              <textarea\r\n                ref={replyRef}\r\n                className={styles.reply_input_textarea}\r\n                name=\"reply\"\r\n                spellCheck=\"false\"\r\n                placeholder=\"주제와 무관한 댓글, 타인의 권리를 침해하거나 명예를 훼손하는 게시물은 제재를 받을 수 있습니다.\"\r\n              ></textarea>\r\n              <button type=\"submit\" className={styles.reply_submit_button}>\r\n                등록\r\n              </button>\r\n            </form>\r\n          </div>\r\n          <div\r\n            className={\r\n              replyList.length === 0\r\n                ? `${styles.reply_container_none}`\r\n                : `${styles.reply_container}`\r\n            }\r\n          >\r\n            {replyList &&\r\n              replyList.map((reply, index) => (\r\n                <Reply\r\n                  key={replyList[index].timeId}\r\n                  articleId={id}\r\n                  timeId={replyList[index].timeId}\r\n                  where={where}\r\n                  reply={reply}\r\n                  loadArticlesAndReplies={loadArticlesAndReplies}\r\n                  user={user}\r\n                  index={index}\r\n                />\r\n              ))}\r\n          </div>\r\n        </section>\r\n      </section>\r\n    );\r\n  } else {\r\n    return <LoadingPage />;\r\n  }\r\n};\r\n\r\nexport default ArticleView;\r\n","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\community\\writeArticle\\writeArticle.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\community\\editArticle\\editArticle.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\errorPage\\errorPage.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\community\\reply\\reply.jsx",["182"],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styles from \"./reply.module.css\";\r\n\r\nconst Reply = ({\r\n  reply,\r\n  articleId,\r\n  timeId,\r\n  where,\r\n  loadArticlesAndReplies,\r\n  user,\r\n  index,\r\n}) => {\r\n  const [isWriter, setIsWriter] = useState(false);\r\n  const [isFirst, setIsFirst] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (user && user.userId === reply.writerId) {\r\n      setIsWriter(true);\r\n    }\r\n    if (index === 0) {\r\n      setIsFirst(true);\r\n    }\r\n  }, []);\r\n\r\n  const onReplyDeleteHandler = () => {\r\n    const confirmPopup = window.confirm(\"정말로 댓글을 삭제하시겠습니까?\");\r\n    if (!confirmPopup) {\r\n      return;\r\n    }\r\n    axios\r\n      .post(`/api/${where}/reply/delete`, {\r\n        articleId,\r\n        replyId: timeId,\r\n      })\r\n      .then((res) => {\r\n        if (res.data.success) {\r\n          window.alert(res.data.message);\r\n          loadArticlesAndReplies();\r\n        }\r\n      })\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  return (\r\n    <section className={isFirst ? `${styles.reply_first}` : `${styles.reply}`}>\r\n      <div className={styles.user_data_and_button}>\r\n        <div className={styles.user_data_container}>\r\n          <p className={styles.name}>{reply.writer}</p>\r\n          <p className={styles.date}>{reply.date}</p>\r\n        </div>\r\n        <div className={styles.button_container}>\r\n          {isWriter && (\r\n            <button\r\n              className={styles.delete_button}\r\n              onClick={onReplyDeleteHandler}\r\n            >\r\n              삭제\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <p className={styles.content}>{reply.content}</p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Reply;\r\n","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\org&pol\\consulting\\consultingItem\\consultingItem.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\findId\\findId.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\findPw\\findPw.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\community\\reportPopup\\reportPopup.jsx",["183"],"import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./reportPopup.module.css\";\r\n\r\nconst ReportPopup = ({ reportOnChange }) => {\r\n  const [isEtc, setIsEtc] = useState(false);\r\n\r\n  const etcChangeCheck = (e) => {\r\n    if (e.target.value === \"기타\") {\r\n      setIsEtc(true);\r\n    } else {\r\n      setIsEtc(false);\r\n    }\r\n  };\r\n\r\n  const reportSubmitHandler = () => {\r\n    // 일단 처리 되었습니다 라고 표시만 되도록 하고 진짜 신고 접수되는 건 나중에 함\r\n    const confirmMessage = window.confirm(\r\n      \"정말로 신고하시겠습니까? \\n신고 접수는 취소할 수 없습니다. \\n허위 신고의 경우 불이익이 있을 수 있습니다.\\n확인 버튼을 클릭하시면 신고 접수가 완료됩니다.\"\r\n    );\r\n    if (confirmMessage) {\r\n      window.alert(\"신고가 접수되었습니다. 감사합니다.\");\r\n      reportOnChange();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className={styles.report_popup}>\r\n      <p className={styles.report_title}>신고하기</p>\r\n      <section className={styles.report_reason}>\r\n        <p className={styles.report_reason_title}>신고사유</p>\r\n        <select\r\n          className={styles.report_reason_select}\r\n          onChange={etcChangeCheck}\r\n        >\r\n          <option value=\"광고/사기\">광고/사기</option>\r\n          <option value=\"폭력적/선정적\">폭력적/선정적</option>\r\n          <option value=\"도배\">도배</option>\r\n          <option value=\"비속어\">비속어</option>\r\n          <option value=\"기타\">기타</option>\r\n        </select>\r\n        {isEtc && (\r\n          <textarea\r\n            className={styles.report_reason_etc}\r\n            placeholder=\"기타 사유를 입력해주세요\"\r\n            spellCheck=\"false\"\r\n          ></textarea>\r\n        )}\r\n\r\n        <button className={styles.submit_button} onClick={reportSubmitHandler}>\r\n          전송\r\n        </button>\r\n        <button className={styles.popup_close} onClick={reportOnChange}>\r\n          <i className=\"fas fa-times\"></i>\r\n        </button>\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ReportPopup;\r\n","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\mypage\\myArticleAndReply\\myPageArticlePreview\\myPageArticlePreview.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\mypage\\myArticleAndReply\\myPageReplyPreview\\myPageReplyPreview.jsx",["184"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styles from \"./myPageReplyPreview.module.css\";\r\nimport axios from \"axios\";\r\n\r\nconst MyPageReplyPreview = ({ reply, allArticles, loadArticlesAndReplies }) => {\r\n  const history = useHistory();\r\n  const [article, setArticle] = useState(null);\r\n  const findArticle = () => {\r\n    for (let i = 0; i < allArticles.length; i++) {\r\n      if (reply.id === allArticles[i].id.toString()) {\r\n        setArticle(allArticles[i]);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    findArticle();\r\n  }, []);\r\n\r\n  const viewArticle = () => {\r\n    article && history.push(`/bbs/view/${article.id}`);\r\n  };\r\n\r\n  const onReplyDeleteHandler = (e) => {\r\n    e.stopPropagation();\r\n    const confirmPopup = window.confirm(\"정말로 댓글을 삭제하시겠습니까?\");\r\n    if (!confirmPopup) {\r\n      return;\r\n    }\r\n    article &&\r\n      axios\r\n        .post(`/api/bbs/reply/delete`, {\r\n          articleId: article.id,\r\n          replyId: reply.timeId,\r\n        })\r\n        .then((res) => {\r\n          if (res.data.success) {\r\n            window.alert(res.data.message);\r\n            loadArticlesAndReplies();\r\n          }\r\n        })\r\n        .catch((err) => console.error(err));\r\n  };\r\n\r\n  return (\r\n    <section className={styles.articlePreview} onClick={viewArticle}>\r\n      <div className={styles.content_reply}>{reply.content}</div>\r\n      {article && <div className={styles.title_reply}>{article.title}</div>}\r\n      <div className={styles.date_reply}>{reply.date}</div>\r\n      <div className={styles.delete_container}>\r\n        <button className={styles.delete_button} onClick={onReplyDeleteHandler}>\r\n          삭제\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MyPageReplyPreview;\r\n","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\loadingPage\\loadingPage.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\process_intro\\tradeTerm\\tradeTermItem\\tradeTermItem.jsx",[],{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":125,"column":6,"nodeType":"191","endLine":125,"endColumn":8,"suggestions":"192"},{"ruleId":"189","severity":1,"message":"193","line":130,"column":6,"nodeType":"191","endLine":130,"endColumn":19,"suggestions":"194"},{"ruleId":"195","severity":1,"message":"196","line":5,"column":19,"nodeType":"197","messageId":"198","endLine":5,"endColumn":29},{"ruleId":"195","severity":1,"message":"199","line":6,"column":19,"nodeType":"197","messageId":"198","endLine":6,"endColumn":29},{"ruleId":"195","severity":1,"message":"200","line":7,"column":20,"nodeType":"197","messageId":"198","endLine":7,"endColumn":31},{"ruleId":"195","severity":1,"message":"201","line":8,"column":21,"nodeType":"197","messageId":"198","endLine":8,"endColumn":33},{"ruleId":"195","severity":1,"message":"202","line":9,"column":22,"nodeType":"197","messageId":"198","endLine":9,"endColumn":35},{"ruleId":"195","severity":1,"message":"203","line":10,"column":22,"nodeType":"197","messageId":"198","endLine":10,"endColumn":35},{"ruleId":"195","severity":1,"message":"204","line":11,"column":27,"nodeType":"197","messageId":"198","endLine":11,"endColumn":45},{"ruleId":"195","severity":1,"message":"205","line":12,"column":23,"nodeType":"197","messageId":"198","endLine":12,"endColumn":37},{"ruleId":"195","severity":1,"message":"206","line":13,"column":22,"nodeType":"197","messageId":"198","endLine":13,"endColumn":35},{"ruleId":"189","severity":1,"message":"207","line":56,"column":6,"nodeType":"191","endLine":56,"endColumn":16,"suggestions":"208"},{"ruleId":"189","severity":1,"message":"209","line":60,"column":6,"nodeType":"191","endLine":60,"endColumn":32,"suggestions":"210"},{"ruleId":"195","severity":1,"message":"211","line":14,"column":9,"nodeType":"197","messageId":"198","endLine":14,"endColumn":16},{"ruleId":"212","severity":1,"message":"213","line":40,"column":16,"nodeType":"214","messageId":"215","endLine":40,"endColumn":27},{"ruleId":"212","severity":1,"message":"213","line":71,"column":21,"nodeType":"214","messageId":"215","endLine":71,"endColumn":32},{"ruleId":"212","severity":1,"message":"213","line":42,"column":16,"nodeType":"214","messageId":"215","endLine":42,"endColumn":27},{"ruleId":"212","severity":1,"message":"213","line":31,"column":16,"nodeType":"214","messageId":"215","endLine":31,"endColumn":27},{"ruleId":"195","severity":1,"message":"216","line":25,"column":9,"nodeType":"197","messageId":"198","endLine":25,"endColumn":23},{"ruleId":"195","severity":1,"message":"217","line":41,"column":9,"nodeType":"197","messageId":"198","endLine":41,"endColumn":29},{"ruleId":"195","severity":1,"message":"218","line":60,"column":9,"nodeType":"197","messageId":"198","endLine":60,"endColumn":23},{"ruleId":"195","severity":1,"message":"219","line":79,"column":9,"nodeType":"197","messageId":"198","endLine":79,"endColumn":28},{"ruleId":"195","severity":1,"message":"220","line":91,"column":9,"nodeType":"197","messageId":"198","endLine":91,"endColumn":28},{"ruleId":"189","severity":1,"message":"221","line":18,"column":6,"nodeType":"191","endLine":18,"endColumn":8,"suggestions":"222"},{"ruleId":"195","severity":1,"message":"223","line":6,"column":8,"nodeType":"197","messageId":"198","endLine":6,"endColumn":17},{"ruleId":"189","severity":1,"message":"224","line":73,"column":6,"nodeType":"191","endLine":73,"endColumn":32,"suggestions":"225"},{"ruleId":"189","severity":1,"message":"226","line":78,"column":6,"nodeType":"191","endLine":78,"endColumn":39,"suggestions":"227"},{"ruleId":"189","severity":1,"message":"228","line":24,"column":6,"nodeType":"191","endLine":24,"endColumn":8,"suggestions":"229"},{"ruleId":"195","severity":1,"message":"230","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":26},{"ruleId":"189","severity":1,"message":"231","line":20,"column":6,"nodeType":"191","endLine":20,"endColumn":8,"suggestions":"232"},"no-native-reassign",["233"],"no-negated-in-lhs",["234"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadArticlesAndReplies'. Either include it or remove the dependency array.","ArrayExpression",["235"],"React Hook useEffect has missing dependencies: 'loadMyArticle' and 'loadMyReply'. Either include them or remove the dependency array.",["236"],"no-unused-vars","'setReadyOn' is assigned a value but never used.","Identifier","unusedVar","'setStartOn' is assigned a value but never used.","'setMovingOn' is assigned a value but never used.","'setArrivalOn' is assigned a value but never used.","'setDepartCity' is assigned a value but never used.","'setDepartDate' is assigned a value but never used.","'setCurrentLocation' is assigned a value but never used.","'setCurrentDate' is assigned a value but never used.","'setArriveCity' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'makeSelectedList'. Either include it or remove the dependency array.",["237"],"React Hook useEffect has a missing dependency: 'makeInputResultList'. Either include it or remove the dependency array.",["238"],"'history' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'idCheckHandler' is assigned a value but never used.","'nicknameCheckHandler' is assigned a value but never used.","'sendSMSHandler' is assigned a value but never used.","'checkAuthNumHandler' is assigned a value but never used.","'signupSubmitHandler' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'length'. Either include them or remove the dependency array.",["239"],"'ErrorPage' is defined but never used.","React Hook useEffect has a missing dependency: 'articleSetting'. Either include it or remove the dependency array.",["240"],"React Hook useEffect has a missing dependency: 'replySetting'. Either include it or remove the dependency array.",["241"],"React Hook useEffect has missing dependencies: 'index', 'reply.writerId', and 'user'. Either include them or remove the dependency array.",["242"],"'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'findArticle'. Either include it or remove the dependency array.",["243"],"no-global-assign","no-unsafe-negation",{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},"Update the dependencies array to be: [loadArticlesAndReplies]",{"range":"262","text":"263"},"Update the dependencies array to be: [loadMyArticle, loadMyReply, sessionUser]",{"range":"264","text":"265"},"Update the dependencies array to be: [makeSelectedList, selected]",{"range":"266","text":"267"},"Update the dependencies array to be: [inputValue, makeInputResultList, selectedList]",{"range":"268","text":"269"},"Update the dependencies array to be: [id, length]",{"range":"270","text":"271"},"Update the dependencies array to be: [articleSetting, articles, noticeArticles]",{"range":"272","text":"273"},"Update the dependencies array to be: [article, replies, noticeReplies, replySetting]",{"range":"274","text":"275"},"Update the dependencies array to be: [index, reply.writerId, user]",{"range":"276","text":"277"},"Update the dependencies array to be: [findArticle]",{"range":"278","text":"279"},[4616,4618],"[loadArticlesAndReplies]",[4692,4705],"[loadMyArticle, loadMyReply, sessionUser]",[1472,1482],"[makeSelectedList, selected]",[1542,1568],"[inputValue, makeInputResultList, selectedList]",[518,520],"[id, length]",[2071,2097],"[articleSetting, articles, noticeArticles]",[2215,2248],"[article, replies, noticeReplies, replySetting]",[513,515],"[index, reply.writerId, user]",[612,614],"[findArticle]"]