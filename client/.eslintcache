[{"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\index.js":"1","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\app.jsx":"2","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\signup\\signup.jsx":"3","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\footer\\footer.jsx":"4","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\mainPage\\mainPage.jsx":"5","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\login\\login.jsx":"6","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\Fare&Tracking\\tracking\\tracking.jsx":"7","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\Fare&Tracking\\fare\\fareExpect.jsx":"8","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\process_intro\\exportProcess\\exportProcess.jsx":"9","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\process_intro\\tradeTerm\\tradeTerm.jsx":"10","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\org&pol\\policies\\policies.jsx":"11","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\mypage\\myArticleAndReply\\myArticleAndReply.jsx":"12","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\community\\notice\\notice.jsx":"13","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\community\\bbs\\bbs.jsx":"14","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\org&pol\\consulting\\consulting.jsx":"15","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\mypage\\fareExpectList\\fareExpectList.jsx":"16","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\org&pol\\organizations\\organizations.jsx":"17","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\mypage\\myPageEdit\\myPageEdit.jsx":"18","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\listTable\\listTable.jsx":"19","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\listTable\\listItem.jsx":"20","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\header\\header.jsx":"21","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\community\\articlePreview\\articlePreview.jsx":"22","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\community\\articleView\\articleView.jsx":"23","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\community\\writeArticle\\writeArticle.jsx":"24","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\community\\editArticle\\editArticle.jsx":"25","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\errorPage\\errorPage.jsx":"26","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\community\\reply\\reply.jsx":"27","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\org&pol\\consulting\\consultingItem\\consultingItem.jsx":"28","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\findId\\findId.jsx":"29","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\findPw\\findPw.jsx":"30","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\community\\reportPopup\\reportPopup.jsx":"31"},{"size":275,"mtime":1624913994267,"results":"32","hashOfConfig":"33"},{"size":7452,"mtime":1625764075506,"results":"34","hashOfConfig":"33"},{"size":7607,"mtime":1625763760671,"results":"35","hashOfConfig":"33"},{"size":691,"mtime":1624913994197,"results":"36","hashOfConfig":"33"},{"size":5172,"mtime":1624913994204,"results":"37","hashOfConfig":"33"},{"size":2433,"mtime":1625717833617,"results":"38","hashOfConfig":"33"},{"size":240,"mtime":1624913994193,"results":"39","hashOfConfig":"33"},{"size":7577,"mtime":1625002049654,"results":"40","hashOfConfig":"33"},{"size":356,"mtime":1625748011591,"results":"41","hashOfConfig":"33"},{"size":246,"mtime":1624913994263,"results":"42","hashOfConfig":"33"},{"size":424,"mtime":1625748037259,"results":"43","hashOfConfig":"33"},{"size":296,"mtime":1624913994206,"results":"44","hashOfConfig":"33"},{"size":3560,"mtime":1625623779055,"results":"45","hashOfConfig":"33"},{"size":3660,"mtime":1625951440655,"results":"46","hashOfConfig":"33"},{"size":516,"mtime":1625660415645,"results":"47","hashOfConfig":"33"},{"size":272,"mtime":1624913994205,"results":"48","hashOfConfig":"33"},{"size":442,"mtime":1625748025494,"results":"49","hashOfConfig":"33"},{"size":251,"mtime":1624913994207,"results":"50","hashOfConfig":"33"},{"size":682,"mtime":1625748050886,"results":"51","hashOfConfig":"33"},{"size":1371,"mtime":1625747355443,"results":"52","hashOfConfig":"33"},{"size":8828,"mtime":1625763738867,"results":"53","hashOfConfig":"33"},{"size":1245,"mtime":1625948461361,"results":"54","hashOfConfig":"33"},{"size":8264,"mtime":1625746856109,"results":"55","hashOfConfig":"33"},{"size":2868,"mtime":1625660354694,"results":"56","hashOfConfig":"33"},{"size":3244,"mtime":1625745516770,"results":"57","hashOfConfig":"33"},{"size":884,"mtime":1625767223796,"results":"58","hashOfConfig":"33"},{"size":1754,"mtime":1625745670121,"results":"59","hashOfConfig":"33"},{"size":829,"mtime":1625674893389,"results":"60","hashOfConfig":"33"},{"size":1580,"mtime":1625717116102,"results":"61","hashOfConfig":"33"},{"size":5838,"mtime":1625745783874,"results":"62","hashOfConfig":"33"},{"size":1642,"mtime":1625951448138,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"uk7f7q",{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\index.js",[],["132","133"],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\app.jsx",["134"],"import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport styles from \"./app.module.css\";\r\nimport FareExpect from \"./components/Fare&Tracking/fare/fareExpect\";\r\nimport Tracking from \"./components/Fare&Tracking/tracking/tracking\";\r\nimport MainPage from \"./components/mainPage/mainPage\";\r\nimport Header from \"./components/header/header\";\r\nimport ExportProcess from \"./components/process_intro/exportProcess/exportProcess\";\r\nimport Tradeterm from \"./components/process_intro/tradeTerm/tradeTerm\";\r\nimport Notice from \"./components/community/notice/notice\";\r\nimport Bbs from \"./components/community/bbs/bbs\";\r\nimport Organizations from \"./components/org&pol/organizations/organizations\";\r\nimport Policies from \"./components/org&pol/policies/policies\";\r\nimport Consulting from \"./components/org&pol/consulting/consulting\";\r\nimport MyArticleAndReply from \"./components/mypage/myArticleAndReply/myArticleAndReply\";\r\nimport FareExpectList from \"./components/mypage/fareExpectList/fareExpectList\";\r\nimport MyPageEdit from \"./components/mypage/myPageEdit/myPageEdit\";\r\nimport Footer from \"./components/footer/footer\";\r\nimport Login from \"./components/login/login\";\r\nimport Signup from \"./components/signup/signup\";\r\nimport axios from \"axios\";\r\nimport WriteArticle from \"./components/community/writeArticle/writeArticle\";\r\nimport ArticleView from \"./components/community/articleView/articleView\";\r\nimport EditArticle from \"./components/community/editArticle/editArticle\";\r\nimport FindId from \"./components/findId/findId\";\r\nimport FindPw from \"./components/findPw/findPw\";\r\nimport ErrorPage from \"./components/errorPage/errorPage\";\r\n\r\nconst App = (props) => {\r\n  const [exportProcessdata, setExportProcessData] = useState(null);\r\n  const [organizationData, setOrganizationData] = useState(null);\r\n  const [policyData, setPolicyData] = useState(null);\r\n  const [consultingData, setConsultingData] = useState(null);\r\n  const [sessionUser, setSessionUser] = useState(null);\r\n  const [bbsArticles, setBbsArticles] = useState(null);\r\n  const [noticeArticles, setNoticeArticles] = useState(null);\r\n  const [bbsReplies, setBbsReplies] = useState(null);\r\n  const [noticeReplies, setNoticeReplies] = useState(null);\r\n\r\n  const callAPI = async (address) => {\r\n    const response = await fetch(address);\r\n    const body = await response.json();\r\n    return body;\r\n  };\r\n\r\n  const logout = (callback) => {\r\n    axios\r\n      .post(\"/auth/logout\")\r\n      .then((response) => window.alert(\"성공적으로 로그아웃 되었습니다.\"))\r\n      .then(callback)\r\n      .catch((err) => console.error(\"error: \", err.response));\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAPI(\"/auth/session-check\")\r\n      .then((res) => {\r\n        if (\"user\" in res) {\r\n          setSessionUser(res.user);\r\n        }\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }, []);\r\n\r\n  const loadBbsArticle = () => {\r\n    callAPI(\"/api/bbs\") //\r\n      .then((res) => setBbsArticles(res))\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  const loadNoticeArticle = () => {\r\n    callAPI(\"/api/notice\") //\r\n      .then((res) => setNoticeArticles(res))\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  const loadBbsReply = () => {\r\n    callAPI(\"/api/bbs/reply\") //\r\n      .then((res) => setBbsReplies(res))\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  const loadNoticeReply = () => {\r\n    callAPI(\"/api/notice/reply\") //\r\n      .then((res) => setNoticeReplies(res))\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  const loadArticlesAndReplies = () => {\r\n    loadBbsArticle();\r\n    loadNoticeArticle();\r\n    loadBbsReply();\r\n    loadNoticeReply();\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadArticlesAndReplies();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    callAPI(\"/api/notice/reply\") //\r\n      .then((res) => setNoticeReplies(res))\r\n      .catch((err) => console.error(err));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    callAPI(\"/api/exportProcess\")\r\n      .then((res) => setExportProcessData(res))\r\n      .catch((err) => console.error(err));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    callAPI(\"/api/organization\")\r\n      .then((res) => setOrganizationData(res))\r\n      .catch((err) => console.error(err));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    callAPI(\"/api/policy\")\r\n      .then((res) => setPolicyData(res))\r\n      .catch((err) => console.error(err));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    callAPI(\"/api/consulting\")\r\n      .then((res) => setConsultingData(res))\r\n      .catch((err) => console.error(err));\r\n  }, []);\r\n\r\n  return (\r\n    <section className={styles.app}>\r\n      <BrowserRouter>\r\n        <Header user={sessionUser} logout={logout} />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <MainPage />\r\n          </Route>\r\n          <Route exact path=\"/exportProcess\">\r\n            {exportProcessdata && <ExportProcess data={exportProcessdata} />}\r\n          </Route>\r\n          <Route exact path=\"/tradeTerms\">\r\n            <Tradeterm />\r\n          </Route>\r\n        </Switch>\r\n        <Route exact path=\"/fareExpect\">\r\n          <FareExpect />\r\n        </Route>\r\n        <Route exact path=\"/tracking\">\r\n          <Tracking />\r\n        </Route>\r\n        <Route exact path=\"/notice\">\r\n          {noticeArticles && (\r\n            <Notice articles={noticeArticles} user={sessionUser} />\r\n          )}\r\n        </Route>\r\n        <Route exact path=\"/bbs\">\r\n          {bbsArticles && <Bbs articles={bbsArticles} user={sessionUser} />}\r\n        </Route>\r\n        <Route exact path=\"/:where/write\">\r\n          <WriteArticle\r\n            user={sessionUser}\r\n            loadArticlesAndReplies={loadArticlesAndReplies}\r\n          />\r\n        </Route>\r\n        <Route exact path=\"/:where/view/:id\">\r\n          {bbsArticles && noticeArticles && bbsReplies && noticeReplies && (\r\n            <ArticleView\r\n              articles={bbsArticles}\r\n              noticeArticles={noticeArticles}\r\n              replies={bbsReplies}\r\n              noticeReplies={noticeReplies}\r\n              loadArticlesAndReplies={loadArticlesAndReplies}\r\n              user={sessionUser}\r\n            />\r\n          )}\r\n        </Route>\r\n        <Route exact path=\"/:where/edit/:id\">\r\n          <EditArticle user={sessionUser} />\r\n        </Route>\r\n        <Route exact path=\"/policies\">\r\n          {policyData && <Policies data={policyData} />}\r\n        </Route>\r\n        <Route exact path=\"/organizations\">\r\n          {organizationData && <Organizations data={organizationData} />}\r\n        </Route>\r\n        <Route exact path=\"/consulting\">\r\n          {consultingData && <Consulting data={consultingData} />}\r\n        </Route>\r\n        <Route exact path=\"/mypage/myArticle\">\r\n          {sessionUser ? <MyArticleAndReply /> : <ErrorPage />}\r\n        </Route>\r\n        <Route exact path=\"/mypage/fareExpect\">\r\n          {sessionUser ? <FareExpectList /> : <ErrorPage />}\r\n        </Route>\r\n        <Route exact path=\"/mypage/edit\">\r\n          {sessionUser ? <MyPageEdit /> : <ErrorPage />}\r\n        </Route>\r\n        <Route exact path=\"/auth/login\">\r\n          <Login />\r\n        </Route>\r\n        <Route exact path=\"/auth/signup\">\r\n          <Signup />\r\n        </Route>\r\n        <Route exact path=\"/auth/findID\">\r\n          <FindId />\r\n        </Route>\r\n        <Route exact path=\"/auth/findPW\">\r\n          <FindPw />\r\n        </Route>\r\n        <Footer />\r\n      </BrowserRouter>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\signup\\signup.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\footer\\footer.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\mainPage\\mainPage.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\login\\login.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\Fare&Tracking\\tracking\\tracking.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\Fare&Tracking\\fare\\fareExpect.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\process_intro\\exportProcess\\exportProcess.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\process_intro\\tradeTerm\\tradeTerm.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\org&pol\\policies\\policies.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\mypage\\myArticleAndReply\\myArticleAndReply.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\community\\notice\\notice.jsx",["135"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ArticlePreview from \"../articlePreview/articlePreview\";\r\nimport styles from \"./notice.module.css\";\r\n\r\nconst Notice = ({ articles, user }) => {\r\n  const history = useHistory();\r\n  const articleKeyList = Object.keys(articles).reverse();\r\n  const [numbering, setNumbering] = useState(1);\r\n  const adminId = \"dlwhd990\"; // env가 안돼서 일단 이렇게 작성 (이유는 모름)\r\n\r\n  const goWrite = () => {\r\n    if (!user) {\r\n      window.alert(\"로그인 하신 후에 글 작성이 가능합니다.\");\r\n      return;\r\n    } else if (user.userId !== adminId) {\r\n      window.alert(\"공지사항은 관리자만 글을 작성할 수 있습니다.\");\r\n      return;\r\n    }\r\n    history.push(\"/notice/write\");\r\n    window.scrollTo({ top: 0 });\r\n  };\r\n\r\n  let pagelength = 0;\r\n\r\n  if (articleKeyList.length % 10 === 0) {\r\n    pagelength = parseInt(articleKeyList.length / 10);\r\n  } else if (articleKeyList.length <= 10) {\r\n    pagelength = 1;\r\n  } else {\r\n    pagelength = parseInt(articleKeyList.length / 10) + 1;\r\n  }\r\n\r\n  const list = [];\r\n\r\n  for (let i = 1; i <= pagelength; i++) {\r\n    list.push(i);\r\n  }\r\n\r\n  let pages = [];\r\n  for (let i = 0; i <= pagelength; i++) {\r\n    pages[i] = new Array();\r\n  }\r\n\r\n  for (let i = 1; i <= pagelength; i++) {\r\n    for (let j = 10 * (i - 1); j < 10 * i; j++) {\r\n      if (articleKeyList[j] === undefined) {\r\n        break;\r\n      }\r\n      pages[i].push(articleKeyList[j]);\r\n    }\r\n  }\r\n\r\n  const pageNumberClick = (e) => {\r\n    setNumbering(e.target.textContent);\r\n  };\r\n\r\n  return (\r\n    <section className={styles.notice}>\r\n      <h1 className={styles.notice_title}>공지사항</h1>\r\n      <section className={styles.top}>\r\n        <section className={styles.search}>\r\n          <select\r\n            name=\"search_type\"\r\n            id=\"search_type\"\r\n            className={styles.search_type_select}\r\n          >\r\n            <option value=\"title\">글 제목</option>\r\n            <option value=\"writer\">작성자</option>\r\n          </select>\r\n          <input type=\"text\" className={styles.search_text_input} />\r\n          <i className={`${styles.search_icon} fas fa-search`}></i>\r\n        </section>\r\n        <section className={styles.button_container}>\r\n          <button className={styles.write_button} onClick={goWrite}>\r\n            글쓰기\r\n          </button>\r\n        </section>\r\n      </section>\r\n      <section className={styles.header}>\r\n        <div className={styles.number}>번호</div>\r\n        <div className={styles.date}>작성일자</div>\r\n        <div className={styles.title}>제목</div>\r\n        <div className={styles.writer}>작성자</div>\r\n        <div className={styles.reply}>댓글</div>\r\n        <div className={styles.recommand}>추천</div>\r\n        <div className={styles.report}>신고</div>\r\n      </section>\r\n      <section className={styles.body}>\r\n        {pages[numbering].map((index) => (\r\n          <ArticlePreview\r\n            key={articles[index].id}\r\n            article={articles[index]}\r\n            where=\"notice\"\r\n          />\r\n        ))}\r\n      </section>\r\n      <section className={styles.bottom}>\r\n        <ul className={styles.page_numbers}>\r\n          {list.map((num) => (\r\n            <li\r\n              key={num}\r\n              className={styles.page_number}\r\n              onClick={pageNumberClick}\r\n            >\r\n              {num}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Notice;\r\n","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\community\\bbs\\bbs.jsx",["136"],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\org&pol\\consulting\\consulting.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\mypage\\fareExpectList\\fareExpectList.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\org&pol\\organizations\\organizations.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\mypage\\myPageEdit\\myPageEdit.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\listTable\\listTable.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\listTable\\listItem.jsx",["137"],"import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./listItem.module.css\";\r\n\r\nconst ListItem = ({ item, id, length }) => {\r\n  const [viewContent, setViewContent] = useState(false);\r\n  const [isFirst, setIsFirst] = useState(false);\r\n  const [isLast, setIsLast] = useState(false);\r\n  const controlView = () => {\r\n    setViewContent(!viewContent);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id === \"0\") {\r\n      setIsFirst(true);\r\n    } else if (id === (length - 1).toString()) {\r\n      setIsLast(true);\r\n    }\r\n  }, []);\r\n\r\n  console.log(item.content);\r\n\r\n  return (\r\n    <section\r\n      className={\r\n        isFirst\r\n          ? `${styles.list_item_first}`\r\n          : isLast\r\n          ? `${styles.list_item_last}`\r\n          : `${styles.list_item}`\r\n      }\r\n      onClick={controlView}\r\n    >\r\n      <div className={styles.item}>\r\n        <h1 className={styles.title}>{item.title}</h1>\r\n        <div className={styles.icon_container}>\r\n          {viewContent ? (\r\n            <img src=\"/images/up.png\" alt=\"close\" />\r\n          ) : (\r\n            <img src=\"/images/down.png\" alt=\"open\" />\r\n          )}\r\n        </div>\r\n      </div>\r\n      {viewContent && (\r\n        <div className={styles.content_container}>\r\n          <p className={styles.content}>{item.content}</p>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\header\\header.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\community\\articlePreview\\articlePreview.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\community\\articleView\\articleView.jsx",["138","139"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport styles from \"./articleView.module.css\";\r\nimport axios from \"axios\";\r\nimport Reply from \"../reply/reply\";\r\nimport ErrorPage from \"../../errorPage/errorPage\";\r\n\r\nconst ArticleView = ({\r\n  articles,\r\n  noticeArticles,\r\n  replies,\r\n  noticeReplies,\r\n  loadArticlesAndReplies,\r\n  user,\r\n}) => {\r\n  const { where, id } = useParams();\r\n  const replyRef = useRef();\r\n  const history = useHistory();\r\n  const [isWriter, setIsWriter] = useState(false);\r\n  const [recommandCount, setRecommandCount] = useState(null);\r\n  const [article, setArticle] = useState(null);\r\n  const [replyList, setReplyList] = useState(null);\r\n  let timeId, month, day, hour, minute;\r\n  let i;\r\n  let boardName;\r\n\r\n  if (where === \"bbs\") {\r\n    boardName = \"자유게시판\";\r\n  } else if (where === \"notice\") {\r\n    boardName = \"공지사항\";\r\n  }\r\n\r\n  // 더 나은 방법이 있을 지 생각해보기 (그냥 id와 인덱스를 매치하면 삭제 때문에 불가능함)\r\n  // 글마다 오브젝트명을 id값으로 하면 되는데 mongodb에서 이를 어떻게 하는지 모름\r\n\r\n  const articleSetting = () => {\r\n    if (where === \"bbs\") {\r\n      for (i = 0; i < articles.length; i++) {\r\n        if (articles[i].id.toString() === id) {\r\n          setArticle(articles[i]);\r\n        }\r\n      }\r\n    } else if (where === \"notice\") {\r\n      for (let i = 0; i < noticeArticles.length; i++) {\r\n        if (noticeArticles[i].id.toString() === id) {\r\n          setArticle(noticeArticles[i]);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const replySetting = () => {\r\n    if (where === \"bbs\") {\r\n      for (i = 0; i < replies.length; i++) {\r\n        if (replies[i].id === article.id) {\r\n          setReplyList(replies[i].replyList);\r\n          break;\r\n        }\r\n      }\r\n    } else if (where === \"notice\") {\r\n      for (i = 0; i < noticeReplies.length; i++) {\r\n        if (noticeReplies[i].id === article.id) {\r\n          setReplyList(noticeReplies[i].replyList);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    articleSetting();\r\n  }, [articles, noticeArticles]);\r\n\r\n  useEffect(() => {\r\n    article && replySetting();\r\n    article && setRecommandCount(article.recommand);\r\n  }, [article, replies, noticeReplies]);\r\n\r\n  useEffect(() => {\r\n    if (user && article && article.writerId === user.userId) {\r\n      setIsWriter(true);\r\n    }\r\n  }, [user, article]);\r\n\r\n  const makeDate = () => {\r\n    let date = new Date();\r\n    timeId = date.getTime().toString();\r\n    month = (date.getMonth() + 1).toString().padStart(2, \"0\");\r\n    day = date.getDate().toString().padStart(2, \"0\");\r\n    hour = date.getHours().toString().padStart(2, \"0\");\r\n    minute = date.getMinutes().toString().padStart(2, \"0\");\r\n  };\r\n\r\n  const onRecommandHandler = () => {\r\n    if (!user) {\r\n      window.alert(\" 로그인 후에 추천이 가능합니다.\");\r\n      return;\r\n    }\r\n    if (article.recommandList.includes(user.userId)) {\r\n      window.alert(\"이미 추천하셨습니다.\");\r\n    } else {\r\n      axios\r\n        .post(`/api/${where}/recommand`, {\r\n          id: article.id,\r\n          userId: user.userId,\r\n          recommand_count: article.recommand,\r\n          recommand_list: article.recommandList,\r\n        })\r\n        .then((res) => {\r\n          loadArticlesAndReplies();\r\n          window.alert(res.data.message);\r\n        })\r\n        .catch((err) => console.error(\"error: \", err.response));\r\n    }\r\n  };\r\n\r\n  const onDeleteHandler = () => {\r\n    const confirmPopup = window.confirm(\"정말로 글을 삭제하시겠습니까?\");\r\n    if (confirmPopup) {\r\n      axios\r\n        .post(`/api/${where}/delete`, {\r\n          id: article.id,\r\n        })\r\n        .then((res) => {\r\n          if (res.data.success) {\r\n            window.alert(res.data.message);\r\n            loadArticlesAndReplies();\r\n            history.push(`/${where}`);\r\n          }\r\n        })\r\n        .catch((err) => console.error(\"error: \", err.response));\r\n    }\r\n  };\r\n\r\n  const onEditHandler = () => {\r\n    window.scrollTo({ top: 0 });\r\n    history.push(`/${where}/edit/${article.id}`);\r\n  };\r\n\r\n  const onReplySubmitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const nowContent = replyRef.current.value;\r\n\r\n    if (!user) {\r\n      window.alert(\"로그인 후에 댓글 작성이 가능합니다.\");\r\n      return;\r\n    }\r\n    if (nowContent === \"\") {\r\n      window.alert(\"내용이 없는 댓글은 작성할 수 없습니다.\");\r\n      return;\r\n    }\r\n\r\n    makeDate();\r\n\r\n    const newReply = {\r\n      id: id,\r\n      timeId: timeId,\r\n      content: nowContent,\r\n      date: `${month}/${day} ${hour}:${minute}`,\r\n      writer: user.nickname,\r\n      writerId: user.userId,\r\n    };\r\n\r\n    axios\r\n      .post(`/api/${where}/writeReply`, newReply)\r\n      .then((res) => {\r\n        if (res.data.success) {\r\n          replyRef.current.value = \"\";\r\n          loadArticlesAndReplies();\r\n        }\r\n      })\r\n      .catch((err) => console.error(\"error: \", err.response));\r\n  };\r\n\r\n  if (article && replyList) {\r\n    return (\r\n      <section className={styles.article_view}>\r\n        <section className={styles.article_container}>\r\n          <article className={styles.article}>\r\n            <div className={styles.title_container}>\r\n              <p className={styles.where}>{boardName}</p>\r\n              <p className={styles.title}>{article.title}</p>\r\n            </div>\r\n            <div className={styles.user_data_and_button_container}>\r\n              <div className={styles.user_data_container}>\r\n                <p className={styles.writer}>{article.writer}</p>\r\n                <p className={styles.date}>{article.date}</p>\r\n              </div>\r\n              <div className={styles.button_container}>\r\n                {isWriter && (\r\n                  <button className={styles.edit} onClick={onEditHandler}>\r\n                    수정\r\n                  </button>\r\n                )}\r\n                {isWriter && (\r\n                  <button className={styles.delete} onClick={onDeleteHandler}>\r\n                    삭제\r\n                  </button>\r\n                )}\r\n                <button\r\n                  className={styles.recommand_button}\r\n                  onClick={onRecommandHandler}\r\n                >\r\n                  {`추천 ${recommandCount}`}\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className={styles.content_container}>\r\n              <p className={styles.content}>{article.content}</p>\r\n            </div>\r\n          </article>\r\n          <div className={styles.reply_input_container}>\r\n            <p\r\n              className={styles.reply_input_title}\r\n            >{`댓글 ${replyList.length}`}</p>\r\n            <form\r\n              className={styles.reply_input_form}\r\n              onSubmit={onReplySubmitHandler}\r\n            >\r\n              <textarea\r\n                ref={replyRef}\r\n                className={styles.reply_input_textarea}\r\n                name=\"reply\"\r\n                spellCheck=\"false\"\r\n                placeholder=\"주제와 무관한 댓글, 타인의 권리를 침해하거나 명예를 훼손하는 게시물은 제재를 받을 수 있습니다.\"\r\n              ></textarea>\r\n              <button type=\"submit\" className={styles.reply_submit_button}>\r\n                등록\r\n              </button>\r\n            </form>\r\n          </div>\r\n          <div\r\n            className={\r\n              replyList.length === 0\r\n                ? `${styles.reply_container_none}`\r\n                : `${styles.reply_container}`\r\n            }\r\n          >\r\n            {replyList &&\r\n              replyList.map((reply, index) => (\r\n                <Reply\r\n                  key={replyList[index].timeId}\r\n                  articleId={id}\r\n                  timeId={replyList[index].timeId}\r\n                  where={where}\r\n                  reply={reply}\r\n                  loadArticlesAndReplies={loadArticlesAndReplies}\r\n                  user={user}\r\n                  index={index}\r\n                />\r\n              ))}\r\n          </div>\r\n        </section>\r\n      </section>\r\n    );\r\n  } else {\r\n    return <ErrorPage />;\r\n  }\r\n};\r\n\r\nexport default ArticleView;\r\n","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\community\\writeArticle\\writeArticle.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\community\\editArticle\\editArticle.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\errorPage\\errorPage.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\community\\reply\\reply.jsx",["140"],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styles from \"./reply.module.css\";\r\n\r\nconst Reply = ({\r\n  reply,\r\n  articleId,\r\n  timeId,\r\n  where,\r\n  loadArticlesAndReplies,\r\n  user,\r\n  index,\r\n}) => {\r\n  const [isWriter, setIsWriter] = useState(false);\r\n  const [isFirst, setIsFirst] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (user && user.userId === reply.writerId) {\r\n      setIsWriter(true);\r\n    }\r\n    if (index === 0) {\r\n      setIsFirst(true);\r\n    }\r\n  }, []);\r\n\r\n  const onReplyDeleteHandler = () => {\r\n    const confirmPopup = window.confirm(\"정말로 댓글을 삭제하시겠습니까?\");\r\n    if (!confirmPopup) {\r\n      return;\r\n    }\r\n    axios\r\n      .post(`/api/${where}/reply/delete`, {\r\n        articleId,\r\n        replyId: timeId,\r\n      })\r\n      .then((res) => {\r\n        if (res.data.success) {\r\n          window.alert(res.data.message);\r\n          loadArticlesAndReplies();\r\n        }\r\n      })\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  return (\r\n    <section className={isFirst ? `${styles.reply_first}` : `${styles.reply}`}>\r\n      <div className={styles.user_data_and_button}>\r\n        <div className={styles.user_data_container}>\r\n          <p className={styles.name}>{reply.writer}</p>\r\n          <p className={styles.date}>{reply.date}</p>\r\n        </div>\r\n        <div className={styles.button_container}>\r\n          {isWriter && (\r\n            <button\r\n              className={styles.delete_button}\r\n              onClick={onReplyDeleteHandler}\r\n            >\r\n              삭제\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <p className={styles.content}>{reply.content}</p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Reply;\r\n","C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\org&pol\\consulting\\consultingItem\\consultingItem.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\findId\\findId.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\findPw\\findPw.jsx",[],"C:\\Users\\82104\\Desktop\\코드\\Projects\\withLogis\\client\\src\\components\\community\\reportPopup\\reportPopup.jsx",["141"],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":97,"column":6,"nodeType":"148","endLine":97,"endColumn":8,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":42,"column":16,"nodeType":"152","messageId":"153","endLine":42,"endColumn":27},{"ruleId":"150","severity":1,"message":"151","line":31,"column":16,"nodeType":"152","messageId":"153","endLine":31,"endColumn":27},{"ruleId":"146","severity":1,"message":"154","line":18,"column":6,"nodeType":"148","endLine":18,"endColumn":8,"suggestions":"155"},{"ruleId":"146","severity":1,"message":"156","line":72,"column":6,"nodeType":"148","endLine":72,"endColumn":32,"suggestions":"157"},{"ruleId":"146","severity":1,"message":"158","line":77,"column":6,"nodeType":"148","endLine":77,"endColumn":39,"suggestions":"159"},{"ruleId":"146","severity":1,"message":"160","line":24,"column":6,"nodeType":"148","endLine":24,"endColumn":8,"suggestions":"161"},{"ruleId":"162","severity":1,"message":"163","line":1,"column":17,"nodeType":"164","messageId":"165","endLine":1,"endColumn":26},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadArticlesAndReplies'. Either include it or remove the dependency array.","ArrayExpression",["168"],"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","React Hook useEffect has missing dependencies: 'id' and 'length'. Either include them or remove the dependency array.",["169"],"React Hook useEffect has a missing dependency: 'articleSetting'. Either include it or remove the dependency array.",["170"],"React Hook useEffect has a missing dependency: 'replySetting'. Either include it or remove the dependency array.",["171"],"React Hook useEffect has missing dependencies: 'index', 'reply.writerId', and 'user'. Either include them or remove the dependency array.",["172"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},"Update the dependencies array to be: [loadArticlesAndReplies]",{"range":"183","text":"184"},"Update the dependencies array to be: [id, length]",{"range":"185","text":"186"},"Update the dependencies array to be: [articleSetting, articles, noticeArticles]",{"range":"187","text":"188"},"Update the dependencies array to be: [article, replies, noticeReplies, replySetting]",{"range":"189","text":"190"},"Update the dependencies array to be: [index, reply.writerId, user]",{"range":"191","text":"192"},[3727,3729],"[loadArticlesAndReplies]",[531,533],"[id, length]",[2013,2039],"[articleSetting, articles, noticeArticles]",[2157,2190],"[article, replies, noticeReplies, replySetting]",[513,515],"[index, reply.writerId, user]"]